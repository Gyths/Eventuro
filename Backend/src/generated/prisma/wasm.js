
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  name: 'name',
  lastName: 'lastName',
  phone: 'phone',
  email: 'email',
  birthdate: 'birthdate',
  gender: 'gender',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasswordUserScalarFieldEnum = {
  userId: 'userId',
  hashedPassword: 'hashedPassword'
};

exports.Prisma.OAuthUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  providerUserId: 'providerUserId'
};

exports.Prisma.OrganizerScalarFieldEnum = {
  organizerId: 'organizerId',
  userId: 'userId',
  companyName: 'companyName',
  idType: 'idType',
  idNumber: 'idNumber'
};

exports.Prisma.EventCategoryScalarFieldEnum = {
  eventCategoryId: 'eventCategoryId',
  initials: 'initials',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventToCategoryScalarFieldEnum = {
  eventId: 'eventId',
  eventCategoryId: 'eventCategoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VenueScalarFieldEnum = {
  venueId: 'venueId',
  eventId: 'eventId',
  city: 'city',
  address: 'address',
  addressUrl: 'addressUrl',
  reference: 'reference',
  capacity: 'capacity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeeScalarFieldEnum = {
  feeId: 'feeId',
  percentage: 'percentage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventScalarFieldEnum = {
  eventId: 'eventId',
  organizerId: 'organizerId',
  feeId: 'feeId',
  title: 'title',
  status: 'status',
  inPerson: 'inPerson',
  description: 'description',
  accessPolicy: 'accessPolicy',
  accessPolicyDescription: 'accessPolicyDescription',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventDateScalarFieldEnum = {
  eventDateId: 'eventDateId',
  eventId: 'eventId',
  startAt: 'startAt',
  endAt: 'endAt'
};

exports.Prisma.EventDateZoneScalarFieldEnum = {
  eventDateZoneId: 'eventDateZoneId',
  eventDateId: 'eventDateId',
  name: 'name',
  kind: 'kind',
  basePrice: 'basePrice',
  capacity: 'capacity',
  capacityRemaining: 'capacityRemaining',
  seatMapId: 'seatMapId',
  currency: 'currency',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeatMapScalarFieldEnum = {
  seatMapId: 'seatMapId',
  rows: 'rows',
  cols: 'cols',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeatScalarFieldEnum = {
  seatId: 'seatId',
  seatMapId: 'seatMapId',
  rowNumber: 'rowNumber',
  colNumber: 'colNumber',
  status: 'status',
  holdUntil: 'holdUntil'
};

exports.Prisma.EventDateZoneAllocationScalarFieldEnum = {
  eventDateZoneAllocationId: 'eventDateZoneAllocationId',
  eventDateZoneId: 'eventDateZoneId',
  audienceName: 'audienceName',
  discountPercent: 'discountPercent',
  allocatedQuantity: 'allocatedQuantity',
  remainingQuantity: 'remainingQuantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventSalesPhaseScalarFieldEnum = {
  eventSalesPhaseId: 'eventSalesPhaseId',
  eventId: 'eventId',
  name: 'name',
  startAt: 'startAt',
  endAt: 'endAt',
  percentage: 'percentage',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  orderId: 'orderId',
  buyerUserId: 'buyerUserId',
  status: 'status',
  currency: 'currency',
  totalAmount: 'totalAmount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  orderItemId: 'orderItemId',
  orderId: 'orderId',
  eventId: 'eventId',
  eventDateId: 'eventDateId',
  eventDateZoneId: 'eventDateZoneId',
  eventDateZoneAllocationId: 'eventDateZoneAllocationId',
  quantity: 'quantity',
  seatId: 'seatId',
  unitPrice: 'unitPrice',
  discountAmount: 'discountAmount',
  finalPrice: 'finalPrice'
};

exports.Prisma.TicketScalarFieldEnum = {
  ticketId: 'ticketId',
  ownerUserId: 'ownerUserId',
  orderItemId: 'orderItemId',
  eventId: 'eventId',
  eventDateId: 'eventDateId',
  eventDateZoneId: 'eventDateZoneId',
  eventDateZoneAllocationId: 'eventDateZoneAllocationId',
  seatId: 'seatId',
  pricePaid: 'pricePaid',
  currency: 'currency',
  issuedAt: 'issuedAt',
  status: 'status'
};

exports.Prisma.HoldScalarFieldEnum = {
  holdId: 'holdId',
  eventDateId: 'eventDateId',
  eventDateZoneId: 'eventDateZoneId',
  seatId: 'seatId',
  quantity: 'quantity',
  buyerUserId: 'buyerUserId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.GENDER = exports.$Enums.GENDER = {
  M: 'M',
  F: 'F',
  O: 'O'
};

exports.STATUS_USER = exports.$Enums.STATUS_USER = {
  A: 'A',
  S: 'S',
  D: 'D'
};

exports.ID_TYPE = exports.$Enums.ID_TYPE = {
  RUC: 'RUC',
  DNI: 'DNI'
};

exports.ACCESS_POLICY = exports.$Enums.ACCESS_POLICY = {
  E: 'E',
  T: 'T',
  AO: 'AO'
};

exports.EVENT_STATUS = exports.$Enums.EVENT_STATUS = {
  P: 'P',
  A: 'A',
  D: 'D'
};

exports.ZONE_KIND = exports.$Enums.ZONE_KIND = {
  GENERAL: 'GENERAL',
  SEATED: 'SEATED'
};

exports.CURRENCY = exports.$Enums.CURRENCY = {
  PEN: 'PEN',
  USD: 'USD'
};

exports.ORDER_STATUS = exports.$Enums.ORDER_STATUS = {
  CREATED: 'CREATED',
  PENDING_PAYMENT: 'PENDING_PAYMENT',
  PAID: 'PAID',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

exports.SEAT_STATUS = exports.$Enums.SEAT_STATUS = {
  AVAILABLE: 'AVAILABLE',
  HELD: 'HELD',
  SOLD: 'SOLD'
};

exports.TICKET_STATUS = exports.$Enums.TICKET_STATUS = {
  PAID: 'PAID',
  CANCELLED: 'CANCELLED',
  USED: 'USED',
  EXPIRED: 'EXPIRED'
};

exports.Prisma.ModelName = {
  User: 'User',
  PasswordUser: 'PasswordUser',
  OAuthUser: 'OAuthUser',
  Organizer: 'Organizer',
  EventCategory: 'EventCategory',
  EventToCategory: 'EventToCategory',
  Venue: 'Venue',
  Fee: 'Fee',
  Event: 'Event',
  EventDate: 'EventDate',
  EventDateZone: 'EventDateZone',
  SeatMap: 'SeatMap',
  Seat: 'Seat',
  EventDateZoneAllocation: 'EventDateZoneAllocation',
  EventSalesPhase: 'EventSalesPhase',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Ticket: 'Ticket',
  Hold: 'Hold'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\USER\\Documents\\Universidad\\Ingeniería de Software\\Proyecto\\Eventuro\\Backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\USER\\Documents\\Universidad\\Ingeniería de Software\\Proyecto\\Eventuro\\Backend\\src\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ====================== Enums ======================\nenum GENDER {\n  M // male\n  F // female\n  O // other\n}\n\nenum STATUS_USER {\n  A // active\n  S // suspended\n  D // deleted\n}\n\nenum ID_TYPE {\n  RUC\n  DNI\n}\n\nenum ACCESS_POLICY {\n  E //everyone: todo el mundo\n  T //teenagers: mayores a 14 con compañia adulta\n  AO //adults only: mayores a 18\n}\n\nenum EVENT_STATUS {\n  P //pending: pendiente\n  A //acepted: aceptado\n  D //denied: denegado\n}\n\nenum ZONE_KIND {\n  GENERAL //aforo\n  SEATED //asientos numerados\n}\n\nenum CURRENCY {\n  PEN\n  USD\n}\n\nenum ORDER_STATUS {\n  CREATED\n  PENDING_PAYMENT\n  PAID\n  CANCELLED\n  EXPIRED\n}\n\nenum SEAT_STATUS {\n  AVAILABLE\n  HELD\n  SOLD\n}\n\nenum TICKET_STATUS {\n  PAID\n  CANCELLED\n  USED\n  EXPIRED\n}\n\n// ====================== Models ======================\n\n// Usuario general\nmodel User {\n  userId    BigInt      @id @default(autoincrement()) @db.BigInt\n  name      String\n  lastName  String\n  phone     String?\n  email     String      @unique\n  birthdate DateTime?\n  gender    GENDER?\n  status    STATUS_USER @default(A)\n\n  // Relaciones\n  password  PasswordUser?\n  oauths    OAuthUser[]\n  organizer Organizer?\n  Ticket    Ticket[]      @relation(\"TicketOwner\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n// Usuario con login por contraseña (1:1 con User)\nmodel PasswordUser {\n  userId         BigInt @id @db.BigInt\n  hashedPassword String\n\n  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)\n}\n\n// Usuario con login externo OAuth (Google, etc.)\nmodel OAuthUser {\n  id             Int    @id @default(autoincrement())\n  userId         BigInt @db.BigInt\n  provider       String\n  providerUserId String\n\n  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)\n\n  @@unique([provider, providerUserId])\n  @@index([userId])\n}\n\n// Organizador (1:1 con User)\nmodel Organizer {\n  organizerId BigInt  @id @default(autoincrement()) @db.BigInt\n  userId      BigInt  @unique @db.BigInt\n  companyName String\n  idType      ID_TYPE\n  idNumber    String  @unique\n\n  user   User    @relation(fields: [userId], references: [userId], onDelete: Cascade)\n  events Event[]\n}\n\n// Categorías de un evento\nmodel EventCategory {\n  eventCategoryId BigInt @id @default(autoincrement()) @db.BigInt\n  initials        String @unique\n  description     String\n\n  //relaciones\n  events EventToCategory[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n//Tabla intermedia entre Evento y Categorías\nmodel EventToCategory {\n  eventId         BigInt @db.BigInt\n  eventCategoryId BigInt @db.BigInt\n\n  //relaciones\n  event    Event         @relation(fields: [eventId], references: [eventId], onDelete: Cascade)\n  category EventCategory @relation(fields: [eventCategoryId], references: [eventCategoryId], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@id([eventId, eventCategoryId])\n}\n\n// Local de un evento\nmodel Venue {\n  venueId    BigInt  @id @default(autoincrement()) @db.BigInt\n  eventId    BigInt  @unique @db.BigInt\n  city       String?\n  address    String?\n  addressUrl String?\n  reference  String?\n  capacity   Int\n\n  //relacion\n  event Event @relation(\"EventVenue\", fields: [eventId], references: [eventId], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n//Tarifa\nmodel Fee {\n  feeId      BigInt  @id @default(autoincrement()) @db.BigInt\n  percentage Decimal @db.Decimal(10, 2)\n\n  //relacion\n  event Event[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n// Evento\nmodel Event {\n  eventId                 BigInt        @id @default(autoincrement()) @db.BigInt\n  organizerId             BigInt        @db.BigInt\n  feeId                   BigInt?       @db.BigInt\n  title                   String\n  status                  EVENT_STATUS  @default(P)\n  inPerson                Boolean\n  description             String\n  accessPolicy            ACCESS_POLICY\n  accessPolicyDescription String?\n\n  //Relaciones\n  organizer   Organizer         @relation(fields: [organizerId], references: [organizerId])\n  venue       Venue?            @relation(\"EventVenue\")\n  fee         Fee?              @relation(fields: [feeId], references: [feeId], onDelete: SetNull)\n  categories  EventToCategory[]\n  dates       EventDate[]\n  salesPhases EventSalesPhase[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizerId])\n  @@index([feeId])\n  @@index([title])\n}\n\nmodel EventDate {\n  eventDateId BigInt   @id @default(autoincrement()) @db.BigInt\n  eventId     BigInt   @db.BigInt\n  startAt     DateTime\n  endAt       DateTime\n\n  //relaciones\n  event     Event           @relation(fields: [eventId], references: [eventId], onDelete: Cascade)\n  zoneDates EventDateZone[]\n  OrderItem OrderItem[]\n  Ticket    Ticket[]\n  Hold      Hold[]\n\n  @@index([eventId, startAt])\n}\n\nmodel EventDateZone {\n  eventDateZoneId   BigInt    @id @default(autoincrement()) @db.BigInt\n  eventDateId       BigInt    @db.BigInt\n  name              String\n  kind              ZONE_KIND\n  basePrice         Decimal   @db.Decimal(10, 2)\n  capacity          Int\n  capacityRemaining Int\n  seatMapId         BigInt?   @unique @db.BigInt\n  currency          CURRENCY\n\n  //relaciones\n  eventDate   EventDate                 @relation(fields: [eventDateId], references: [eventDateId], onDelete: Cascade)\n  seatMap     SeatMap?                  @relation(fields: [seatMapId], references: [seatMapId], onDelete: SetNull)\n  allocations EventDateZoneAllocation[]\n  OrderItem   OrderItem[]\n  Ticket      Ticket[]\n  Hold        Hold[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([eventDateId, name])\n}\n\nmodel SeatMap {\n  seatMapId BigInt @id @default(autoincrement()) @db.BigInt\n  rows      Int\n  cols      Int\n\n  //relaciones\n  occupiedSeats Seat[]\n  EventDateZone EventDateZone?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Seat {\n  seatId    BigInt      @id @default(autoincrement()) @db.BigInt\n  seatMapId BigInt      @db.BigInt\n  rowNumber Int\n  colNumber Int\n  status    SEAT_STATUS @default(AVAILABLE)\n  holdUntil DateTime?\n\n  //relaciones\n  seatMap   SeatMap     @relation(fields: [seatMapId], references: [seatMapId], onDelete: Cascade)\n  OrderItem OrderItem[]\n  Ticket    Ticket[]\n  Hold      Hold[]\n\n  @@unique([seatMapId, rowNumber, colNumber])\n  @@index([seatMapId])\n  @@index([status])\n}\n\nmodel EventDateZoneAllocation {\n  eventDateZoneAllocationId BigInt  @id @default(autoincrement()) @db.BigInt\n  eventDateZoneId           BigInt  @db.BigInt\n  audienceName              String\n  discountPercent           Decimal @db.Decimal(5, 2)\n  allocatedQuantity         Int\n  remainingQuantity         Int?\n\n  //relaciones\n  zone      EventDateZone @relation(fields: [eventDateZoneId], references: [eventDateZoneId], onDelete: Cascade)\n  OrderItem OrderItem[]\n  Ticket    Ticket[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([eventDateZoneId, audienceName])\n}\n\n//se deberia dis\nmodel EventSalesPhase {\n  eventSalesPhaseId BigInt    @id @default(autoincrement()) @db.BigInt\n  eventId           BigInt    @db.BigInt\n  name              String\n  startAt           DateTime?\n  endAt             DateTime?\n  percentage        Decimal   @db.Decimal(10, 2)\n  active            Boolean   @default(false)\n\n  event Event @relation(fields: [eventId], references: [eventId], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([eventId, startAt])\n}\n\nmodel Order {\n  orderId     BigInt       @id @default(autoincrement()) @db.BigInt\n  buyerUserId BigInt       @db.BigInt\n  status      ORDER_STATUS @default(CREATED)\n  currency    CURRENCY\n  totalAmount Decimal      @db.Decimal(10, 2)\n\n  //Relaciones\n  items OrderItem[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([buyerUserId])\n  @@index([status, createdAt])\n}\n\nmodel OrderItem {\n  orderItemId               BigInt   @id @default(autoincrement()) @db.BigInt\n  orderId                   BigInt   @db.BigInt\n  eventId                   BigInt   @db.BigInt\n  eventDateId               BigInt   @db.BigInt\n  eventDateZoneId           BigInt   @db.BigInt\n  eventDateZoneAllocationId BigInt?  @db.BigInt\n  quantity                  Int?\n  seatId                    BigInt?  @db.BigInt\n  unitPrice                 Decimal  @db.Decimal(10, 2)\n  discountAmount            Decimal? @db.Decimal(10, 2)\n  finalPrice                Decimal  @db.Decimal(10, 2)\n\n  //Relaciones\n  order      Order                    @relation(fields: [orderId], references: [orderId], onDelete: Cascade)\n  eventDate  EventDate                @relation(fields: [eventDateId], references: [eventDateId], onDelete: Restrict)\n  zone       EventDateZone            @relation(fields: [eventDateZoneId], references: [eventDateZoneId], onDelete: Restrict)\n  seat       Seat?                    @relation(fields: [seatId], references: [seatId], onDelete: Restrict)\n  allocation EventDateZoneAllocation? @relation(fields: [eventDateZoneAllocationId], references: [eventDateZoneAllocationId], onDelete: SetNull)\n  Ticket     Ticket[]\n\n  @@unique([seatId])\n  @@index([orderId])\n  @@index([eventDateId, eventDateZoneId])\n}\n\nmodel Ticket {\n  ticketId                  BigInt        @id @default(autoincrement()) @db.BigInt\n  ownerUserId               BigInt?       @db.BigInt\n  orderItemId               BigInt        @db.BigInt\n  eventId                   BigInt        @db.BigInt\n  eventDateId               BigInt        @db.BigInt\n  eventDateZoneId           BigInt        @db.BigInt\n  eventDateZoneAllocationId BigInt?       @db.BigInt\n  seatId                    BigInt?       @db.BigInt\n  pricePaid                 Decimal       @db.Decimal(10, 2)\n  currency                  CURRENCY      @default(PEN)\n  issuedAt                  DateTime      @default(now())\n  status                    TICKET_STATUS @default(PAID)\n\n  item       OrderItem                @relation(fields: [orderItemId], references: [orderItemId], onDelete: Restrict)\n  eventDate  EventDate                @relation(fields: [eventDateId], references: [eventDateId], onDelete: Restrict)\n  zone       EventDateZone            @relation(fields: [eventDateZoneId], references: [eventDateZoneId], onDelete: Restrict)\n  seat       Seat?                    @relation(fields: [seatId], references: [seatId], onDelete: Restrict)\n  allocation EventDateZoneAllocation? @relation(fields: [eventDateZoneAllocationId], references: [eventDateZoneAllocationId], onDelete: SetNull)\n  owner      User?                    @relation(\"TicketOwner\", fields: [ownerUserId], references: [userId], onDelete: SetNull)\n\n  @@unique([eventDateId, seatId])\n  @@index([eventDateId, eventDateZoneId])\n}\n\nmodel Hold {\n  holdId          BigInt   @id @default(autoincrement()) @db.BigInt\n  eventDateId     BigInt   @db.BigInt\n  eventDateZoneId BigInt   @db.BigInt\n  seatId          BigInt?  @db.BigInt\n  quantity        Int?\n  buyerUserId     BigInt?  @db.BigInt\n  expiresAt       DateTime\n  createdAt       DateTime @default(now())\n\n  eventDate EventDate     @relation(fields: [eventDateId], references: [eventDateId], onDelete: Cascade)\n  zone      EventDateZone @relation(fields: [eventDateZoneId], references: [eventDateZoneId], onDelete: Cascade)\n  seat      Seat?         @relation(fields: [seatId], references: [seatId], onDelete: Restrict)\n\n  @@unique([seatId])\n  @@index([eventDateId, eventDateZoneId])\n  @@index([expiresAt])\n}\n",
  "inlineSchemaHash": "0847fb2df1f1791fa31d96fc4dafd18078e828b1782043649dad0fd839bcc6c6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthdate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"GENDER\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"STATUS_USER\"},{\"name\":\"password\",\"kind\":\"object\",\"type\":\"PasswordUser\",\"relationName\":\"PasswordUserToUser\"},{\"name\":\"oauths\",\"kind\":\"object\",\"type\":\"OAuthUser\",\"relationName\":\"OAuthUserToUser\"},{\"name\":\"organizer\",\"kind\":\"object\",\"type\":\"Organizer\",\"relationName\":\"OrganizerToUser\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketOwner\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PasswordUser\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordUserToUser\"}],\"dbName\":null},\"OAuthUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OAuthUserToUser\"}],\"dbName\":null},\"Organizer\":{\"fields\":[{\"name\":\"organizerId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idType\",\"kind\":\"enum\",\"type\":\"ID_TYPE\"},{\"name\":\"idNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizerToUser\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToOrganizer\"}],\"dbName\":null},\"EventCategory\":{\"fields\":[{\"name\":\"eventCategoryId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"initials\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"EventToCategory\",\"relationName\":\"EventCategoryToEventToCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EventToCategory\":{\"fields\":[{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventCategoryId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventToCategory\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"EventCategory\",\"relationName\":\"EventCategoryToEventToCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Venue\":{\"fields\":[{\"name\":\"venueId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventVenue\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Fee\":{\"fields\":[{\"name\":\"feeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToFee\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"organizerId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"feeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"EVENT_STATUS\"},{\"name\":\"inPerson\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessPolicy\",\"kind\":\"enum\",\"type\":\"ACCESS_POLICY\"},{\"name\":\"accessPolicyDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizer\",\"kind\":\"object\",\"type\":\"Organizer\",\"relationName\":\"EventToOrganizer\"},{\"name\":\"venue\",\"kind\":\"object\",\"type\":\"Venue\",\"relationName\":\"EventVenue\"},{\"name\":\"fee\",\"kind\":\"object\",\"type\":\"Fee\",\"relationName\":\"EventToFee\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"EventToCategory\",\"relationName\":\"EventToEventToCategory\"},{\"name\":\"dates\",\"kind\":\"object\",\"type\":\"EventDate\",\"relationName\":\"EventToEventDate\"},{\"name\":\"salesPhases\",\"kind\":\"object\",\"type\":\"EventSalesPhase\",\"relationName\":\"EventToEventSalesPhase\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EventDate\":{\"fields\":[{\"name\":\"eventDateId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventDate\"},{\"name\":\"zoneDates\",\"kind\":\"object\",\"type\":\"EventDateZone\",\"relationName\":\"EventDateToEventDateZone\"},{\"name\":\"OrderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"EventDateToOrderItem\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"EventDateToTicket\"},{\"name\":\"Hold\",\"kind\":\"object\",\"type\":\"Hold\",\"relationName\":\"EventDateToHold\"}],\"dbName\":null},\"EventDateZone\":{\"fields\":[{\"name\":\"eventDateZoneId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kind\",\"kind\":\"enum\",\"type\":\"ZONE_KIND\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"capacityRemaining\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seatMapId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"CURRENCY\"},{\"name\":\"eventDate\",\"kind\":\"object\",\"type\":\"EventDate\",\"relationName\":\"EventDateToEventDateZone\"},{\"name\":\"seatMap\",\"kind\":\"object\",\"type\":\"SeatMap\",\"relationName\":\"EventDateZoneToSeatMap\"},{\"name\":\"allocations\",\"kind\":\"object\",\"type\":\"EventDateZoneAllocation\",\"relationName\":\"EventDateZoneToEventDateZoneAllocation\"},{\"name\":\"OrderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"EventDateZoneToOrderItem\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"EventDateZoneToTicket\"},{\"name\":\"Hold\",\"kind\":\"object\",\"type\":\"Hold\",\"relationName\":\"EventDateZoneToHold\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SeatMap\":{\"fields\":[{\"name\":\"seatMapId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rows\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cols\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"occupiedSeats\",\"kind\":\"object\",\"type\":\"Seat\",\"relationName\":\"SeatToSeatMap\"},{\"name\":\"EventDateZone\",\"kind\":\"object\",\"type\":\"EventDateZone\",\"relationName\":\"EventDateZoneToSeatMap\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Seat\":{\"fields\":[{\"name\":\"seatId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"seatMapId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rowNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"colNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SEAT_STATUS\"},{\"name\":\"holdUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"seatMap\",\"kind\":\"object\",\"type\":\"SeatMap\",\"relationName\":\"SeatToSeatMap\"},{\"name\":\"OrderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToSeat\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"SeatToTicket\"},{\"name\":\"Hold\",\"kind\":\"object\",\"type\":\"Hold\",\"relationName\":\"HoldToSeat\"}],\"dbName\":null},\"EventDateZoneAllocation\":{\"fields\":[{\"name\":\"eventDateZoneAllocationId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateZoneId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"audienceName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountPercent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"allocatedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remainingQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"EventDateZone\",\"relationName\":\"EventDateZoneToEventDateZoneAllocation\"},{\"name\":\"OrderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"EventDateZoneAllocationToOrderItem\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"EventDateZoneAllocationToTicket\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EventSalesPhase\":{\"fields\":[{\"name\":\"eventSalesPhaseId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventSalesPhase\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"buyerUserId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ORDER_STATUS\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"CURRENCY\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateZoneId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateZoneAllocationId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seatId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"finalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"eventDate\",\"kind\":\"object\",\"type\":\"EventDate\",\"relationName\":\"EventDateToOrderItem\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"EventDateZone\",\"relationName\":\"EventDateZoneToOrderItem\"},{\"name\":\"seat\",\"kind\":\"object\",\"type\":\"Seat\",\"relationName\":\"OrderItemToSeat\"},{\"name\":\"allocation\",\"kind\":\"object\",\"type\":\"EventDateZoneAllocation\",\"relationName\":\"EventDateZoneAllocationToOrderItem\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"OrderItemToTicket\"}],\"dbName\":null},\"Ticket\":{\"fields\":[{\"name\":\"ticketId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"ownerUserId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateZoneId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateZoneAllocationId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"seatId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"pricePaid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"enum\",\"type\":\"CURRENCY\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TICKET_STATUS\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToTicket\"},{\"name\":\"eventDate\",\"kind\":\"object\",\"type\":\"EventDate\",\"relationName\":\"EventDateToTicket\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"EventDateZone\",\"relationName\":\"EventDateZoneToTicket\"},{\"name\":\"seat\",\"kind\":\"object\",\"type\":\"Seat\",\"relationName\":\"SeatToTicket\"},{\"name\":\"allocation\",\"kind\":\"object\",\"type\":\"EventDateZoneAllocation\",\"relationName\":\"EventDateZoneAllocationToTicket\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TicketOwner\"}],\"dbName\":null},\"Hold\":{\"fields\":[{\"name\":\"holdId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"eventDateZoneId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"seatId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buyerUserId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"eventDate\",\"kind\":\"object\",\"type\":\"EventDate\",\"relationName\":\"EventDateToHold\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"EventDateZone\",\"relationName\":\"EventDateZoneToHold\"},{\"name\":\"seat\",\"kind\":\"object\",\"type\":\"Seat\",\"relationName\":\"HoldToSeat\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

